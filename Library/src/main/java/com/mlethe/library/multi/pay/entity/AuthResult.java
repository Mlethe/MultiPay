package com.mlethe.library.multi.pay.entity;import android.text.TextUtils;import java.util.Map;/** * 支付宝授权返回结果 * * @author Mlethe */public class AuthResult {    /**     * 判断resultStatus 为“9000”且resultCode为“200”则代表授权成功，具体状态码代表含义可参考授权接口文档     */    private int resultStatus;    private String result;    private String memo;    private int resultCode;    private String authCode;    private String alipayOpenId;    public AuthResult(Map<String, String> rawResult, boolean removeBrackets) {        if (rawResult == null) {            return;        }        for (String key : rawResult.keySet()) {            if (TextUtils.equals(key, "resultStatus")) {                String val = rawResult.get(key);                if (val == null) {                    resultStatus = -1;                } else {                    try {                        resultStatus = Integer.valueOf(val);                    } catch (Exception e) {                        e.printStackTrace();                        resultStatus = -1;                    }                }            } else if (TextUtils.equals(key, "result")) {                result = rawResult.get(key);            } else if (TextUtils.equals(key, "memo")) {                memo = rawResult.get(key);            }        }        String[] resultValue = result.split("&");        for (String value : resultValue) {            if (value.startsWith("alipay_open_id")) {                alipayOpenId = removeBrackets(getValue("alipay_open_id=", value), removeBrackets);                continue;            }            if (value.startsWith("auth_code")) {                authCode = removeBrackets(getValue("auth_code=", value), removeBrackets);                continue;            }            if (value.startsWith("result_code")) {                String val = removeBrackets(getValue("result_code=", value), removeBrackets);                if (val == null) {                    resultCode = -1;                } else {                    try {                        resultCode = Integer.valueOf(val);                    } catch (Exception e) {                        e.printStackTrace();                        resultCode = -1;                    }                }                continue;            }        }    }    private String removeBrackets(String str, boolean remove) {        if (remove) {            if (!TextUtils.isEmpty(str)) {                if (str.startsWith("\"")) {                    str = str.replaceFirst("\"", "");                }                if (str.endsWith("\"")) {                    str = str.substring(0, str.length() - 1);                }            }        }        return str;    }    @Override    public String toString() {        return "authCode={" + authCode + "}; resultStatus={" + resultStatus + "}; memo={" + memo + "}; result={" + result + "}";    }    private String getValue(String header, String data) {        return data.substring(header.length(), data.length());    }    /**     * @return the resultStatus     */    public int getResultStatus() {        return resultStatus;    }    /**     * @return the memo     */    public String getMemo() {        return memo;    }    /**     * @return the result     */    public String getResult() {        return result;    }    /**     * @return the resultCode     */    public int getResultCode() {        return resultCode;    }    /**     * @return the authCode     */    public String getAuthCode() {        return authCode;    }    /**     * @return the alipayOpenId     */    public String getAlipayOpenId() {        return alipayOpenId;    }}